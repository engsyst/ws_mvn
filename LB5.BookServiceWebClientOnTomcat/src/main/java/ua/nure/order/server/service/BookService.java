
package ua.nure.order.server.service;

import java.util.List;

import jakarta.jws.WebMethod;
import jakarta.jws.WebParam;
import jakarta.jws.WebResult;
import jakarta.jws.WebService;
import jakarta.xml.bind.annotation.XmlSeeAlso;
import jakarta.xml.ws.Action;
import jakarta.xml.ws.FaultAction;
import jakarta.xml.ws.RequestWrapper;
import jakarta.xml.ws.ResponseWrapper;
import ua.nure.order.entity.Book;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.4-b01
 * Generated source version: 2.2
 * 
 */
@WebService(name = "BookService", targetNamespace = "http://order.nure.ua/server/service")
@XmlSeeAlso({
    ua.nure.order.entity.ObjectFactory.class,
    ua.nure.order.server.service.ObjectFactory.class
})
public interface BookService {


    /**
     * 
     * @param pattern
     * @return
     *     returns java.util.List<ua.nure.order.entity.Book>
     */
    @WebMethod
    @WebResult(targetNamespace = "http://order.nure.ua/entity")
    @RequestWrapper(localName = "findByTitle", targetNamespace = "http://order.nure.ua/server/service", className = "ua.nure.order.server.service.FindByTitle")
    @ResponseWrapper(localName = "findByTitleResponse", targetNamespace = "http://order.nure.ua/server/service", className = "ua.nure.order.server.service.FindByTitleResponse")
    @Action(input = "http://order.nure.ua/server/service/BookService/findByTitleRequest", output = "http://order.nure.ua/server/service/BookService/findByTitleResponse")
    public List<Book> findByTitle(
        @WebParam(name = "pattern", targetNamespace = "")
        String pattern);

    /**
     * 
     * @param pattern
     * @return
     *     returns java.util.List<ua.nure.order.entity.Book>
     */
    @WebMethod
    @WebResult(targetNamespace = "http://order.nure.ua/entity")
    @RequestWrapper(localName = "findByAuthor", targetNamespace = "http://order.nure.ua/server/service", className = "ua.nure.order.server.service.FindByAuthor")
    @ResponseWrapper(localName = "findByAuthorResponse", targetNamespace = "http://order.nure.ua/server/service", className = "ua.nure.order.server.service.FindByAuthorResponse")
    @Action(input = "http://order.nure.ua/server/service/BookService/findByAuthorRequest", output = "http://order.nure.ua/server/service/BookService/findByAuthorResponse")
    public List<Book> findByAuthor(
        @WebParam(name = "pattern", targetNamespace = "")
        String pattern);

    /**
     * 
     * @param id
     * @return
     *     returns ua.nure.order.entity.Book
     * @throws DAOException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "http://order.nure.ua/entity")
    @RequestWrapper(localName = "getBook", targetNamespace = "http://order.nure.ua/server/service", className = "ua.nure.order.server.service.GetBook")
    @ResponseWrapper(localName = "getBookResponse", targetNamespace = "http://order.nure.ua/server/service", className = "ua.nure.order.server.service.GetBookResponse")
    @Action(input = "http://order.nure.ua/server/service/BookService/getBookRequest", output = "http://order.nure.ua/server/service/BookService/getBookResponse", fault = {
        @FaultAction(className = DAOException_Exception.class, value = "http://order.nure.ua/server/service/BookService/getBook/Fault/DAOException")
    })
    public Book getBook(
        @WebParam(name = "id", targetNamespace = "")
        int id)
        throws DAOException_Exception
    ;

    /**
     * 
     * @return
     *     returns java.util.List<ua.nure.order.entity.Book>
     */
    @WebMethod
    @WebResult(targetNamespace = "http://order.nure.ua/entity")
    @RequestWrapper(localName = "listBooks", targetNamespace = "http://order.nure.ua/server/service", className = "ua.nure.order.server.service.ListBooks")
    @ResponseWrapper(localName = "listBooksResponse", targetNamespace = "http://order.nure.ua/server/service", className = "ua.nure.order.server.service.ListBooksResponse")
    @Action(input = "http://order.nure.ua/server/service/BookService/listBooksRequest", output = "http://order.nure.ua/server/service/BookService/listBooksResponse")
    public List<Book> listBooks();

    /**
     * 
     * @param book
     * @return
     *     returns int
     * @throws DAOException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "addBook", targetNamespace = "http://order.nure.ua/server/service", className = "ua.nure.order.server.service.AddBook")
    @ResponseWrapper(localName = "addBookResponse", targetNamespace = "http://order.nure.ua/server/service", className = "ua.nure.order.server.service.AddBookResponse")
    @Action(input = "http://order.nure.ua/server/service/BookService/addBookRequest", output = "http://order.nure.ua/server/service/BookService/addBookResponse", fault = {
        @FaultAction(className = DAOException_Exception.class, value = "http://order.nure.ua/server/service/BookService/addBook/Fault/DAOException")
    })
    public int addBook(
        @WebParam(name = "book", targetNamespace = "http://order.nure.ua/entity")
        Book book)
        throws DAOException_Exception
    ;

    /**
     * 
     * @param id
     * @return
     *     returns ua.nure.order.entity.Book
     * @throws DAOException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "http://order.nure.ua/entity")
    @RequestWrapper(localName = "deleteBook", targetNamespace = "http://order.nure.ua/server/service", className = "ua.nure.order.server.service.DeleteBook")
    @ResponseWrapper(localName = "deleteBookResponse", targetNamespace = "http://order.nure.ua/server/service", className = "ua.nure.order.server.service.DeleteBookResponse")
    @Action(input = "http://order.nure.ua/server/service/BookService/deleteBookRequest", output = "http://order.nure.ua/server/service/BookService/deleteBookResponse", fault = {
        @FaultAction(className = DAOException_Exception.class, value = "http://order.nure.ua/server/service/BookService/deleteBook/Fault/DAOException")
    })
    public Book deleteBook(
        @WebParam(name = "id", targetNamespace = "")
        int id)
        throws DAOException_Exception
    ;

}
