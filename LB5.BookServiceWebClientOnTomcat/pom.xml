<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>ua.nure.itech.jax-ws</groupId>
    <artifactId>lb5-book-service-web-client</artifactId>
	<version>1.1</version>
    <name>Books Web-Service web client</name>
    <description>
        Web client to "JaxWS Book Service Demo". It is the Java Web application.
        Example how to develop Web applications in Java using Servlets and JSP.
    </description>
    <packaging>war</packaging>

    <properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<!-- Java version -->
		<java.version>17</java.version>
		<maven.compiler.source>${java.version}</maven.compiler.source>
		<maven.compiler.target>${java.version}</maven.compiler.target>
        <!-- versions -->
        <com.sun.xml.ws.version>4.0.0</com.sun.xml.ws.version>
		<jakarta.el.version>4.0.0</jakarta.el.version>
		<jakarta.servlet.jsp.jstl.version>3.0.0</jakarta.servlet.jsp.jstl.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>com.sun.xml.ws</groupId>
            <artifactId>jaxws-rt</artifactId>
            <version>${com.sun.xml.ws.version}</version>
        </dependency>

		<dependency>
			<groupId>jakarta.activation</groupId>
			<artifactId>jakarta.activation-api</artifactId>
			<version>2.0.0</version>
		</dependency>

		<!-- Java Web -->
		<dependency>
			<groupId>jakarta.servlet</groupId>
			<artifactId>jakarta.servlet-api</artifactId>
			<version>5.0.0</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>jakarta.servlet.jsp</groupId>
			<artifactId>jakarta.servlet.jsp-api</artifactId>
			<version>3.0.0</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>jakarta.el</groupId>
			<artifactId>jakarta.el-api</artifactId>
			<version>4.0.0</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>jakarta.servlet.jsp.jstl</groupId>
			<artifactId>jakarta.servlet.jsp.jstl-api</artifactId>
			<version>${jakarta.servlet.jsp.jstl.version}</version>
			<!-- The scope must not be 'provided'. Tomcat 10 does not contain it -->
		</dependency>
		<dependency>
			<groupId>org.glassfish.web</groupId>
			<artifactId>jakarta.servlet.jsp.jstl</artifactId>
			<version>${jakarta.servlet.jsp.jstl.version}</version>
		</dependency>
		<dependency>
			<groupId>org.glassfish</groupId>
			<artifactId>jakarta.el</artifactId>
			<version>${jakarta.el.version}</version>
		</dependency>

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>1.7.36</version>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>1.2.11</version>
		</dependency>

        <!-- https://mvnrepository.com/artifact/mysql/mysql-connector-java -->
        <!--<dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>6.0.6</version>
        </dependency>-->

    </dependencies>


    <build>
        <finalName>Metroemo</finalName>
        <pluginManagement>
            <!-- lock down plugins versions to avoid using Maven
                 defaults (may be moved to parent pom) -->
            <plugins>
                <plugin>
                    <artifactId>maven-clean-plugin</artifactId>
                    <version>3.1.0</version>
                </plugin>
                <!-- see http://maven.apache.org/ref/current/maven-core/default-bindings.html#Plugin_bindings_for_war_packaging -->
                <plugin>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>3.0.2</version>
                </plugin>
                <plugin>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.8.0</version>
                </plugin>
                <plugin>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>2.22.1</version>
                </plugin>
                <plugin>
                    <artifactId>maven-war-plugin</artifactId>
                    <version>3.2.2</version>
                </plugin>
                <plugin>
                    <artifactId>maven-install-plugin</artifactId>
                    <version>2.5.2</version>
                </plugin>
                <plugin>
                    <artifactId>maven-deploy-plugin</artifactId>
                    <version>2.8.2</version>
                </plugin>
				<!-- to generate client artefact run maven goal: -->
				<!-- mvn clean jaxws:wsimport -->
				<plugin>
					<groupId>com.sun.xml.ws</groupId>
					<artifactId>jaxws-maven-plugin</artifactId>
					<version>3.0.0</version>
					<executions>
						<execution>
							<phase>generate-sources</phase>
							<goals>
								<goal>wsimport</goal>
							</goals>
						</execution>
					</executions>
					<configuration>
						<wsdlUrls>
							<!-- Fix me to your WSDL URL -->
							<wsdlUrl>http://localhost:9090/hello?wsdl</wsdlUrl>
						</wsdlUrls>
						<keep>true</keep>
						<sourceDestDir>${project.build.sourceDirectory}</sourceDestDir>
					</configuration>
				</plugin>
                <plugin>
                    <groupId>org.apache.tomcat.maven</groupId>
                    <artifactId>tomcat7-maven-plugin</artifactId>
                    <version>2.2</version>
                    <configuration>
                        <url>http://localhost:8080/manager/text</url>
                        <username>tomcat</username>
                        <password>tomcat</password>
                        <path>/books</path>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>
</project>
